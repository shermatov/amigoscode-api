name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: shermatov
          POSTGRES_PASSWORD: superSecret
          POSTGRES_DB: customer
        ports:
          - 5332:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Send Slack Message - Start
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Deployment started postgres_bar ü§û"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Send Slack Message - Maven Build
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üì¶ Building with Maven"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{ steps.build-number.outputs.BUILD_NUMBER }} jib:build
        working-directory: ./backend

      - name: Send Slack Message - Docker Push
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üê≥ Image tag :${{ steps.build-number.outputs.BUILD_NUMBER }} pushed to https://hub.docker.com/repository/docker/shermatov/amigoscode-api"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update Dockerrun.aws.json api image tag with build number
        run: |
          echo "Dockerrun.aws.json before updating seg"
          cat backend/Dockerrun.aws.json
          sed -i -E "s_(shermatov/amigoscode-api:)([^\"]*)_\1${{ steps.build-number.outputs.BUILD_NUMBER }}_" backend/Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating seg"
          cat backend/Dockerrun.aws.json

      - name: Send Slack Message - Deploy to Beanstalk
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚òÅÔ∏è Starting deployment to Elastic Beanstalk"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: backend/Dockerrun.aws.json

      - name: Send Slack Message - Commit Info
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"	‚è≥ Committing to repo https://github.com/shermatov/amigoscode-api"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add backend/Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}" || echo "No changes to commit"
          git push

      - name: Send Slack Message - Deployment Done
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Deployment and commit completed ‚úÖ üéâ - ${{ secrets.EB_ENVIRONMENT_URL }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message - Job Status
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Job Status: ${{ job.status }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
